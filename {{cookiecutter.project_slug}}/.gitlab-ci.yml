image: python:3.7

stages:
- check
- test
- coverage
- build
- deploy

cache:
  paths:
    - ~/.cache/pip/

check:
  stage: check
  before_script:
    - pip install black isort flake8 tox
  script:
    - make check

test:
  stage: test
  services:
    - postgres:11
  before_script:
    - pip install tox
  variables:
    DATABASE_URL: "postgres://postgres:postgres@postgres:5432/{{cookiecutter.project_slug}}"
    DJANGO_SECRET_KEY: "{{ cookiecutter.secret_key }}"
  script:
    - tox -e coverage,report,reporthtml
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 day

coverage:
  stage: coverage
  dependencies:
    - test
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public

build:
  stage: build
  image: docker:18-git
  services:
    - docker:18-dind
  variables:
    DOCKER_DRIVER: "overlay"
  before_script:
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA --pull ."
    - "docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA"
  after_script:
    - "docker logout $CI_REGISTRY"
  only:
    - develop
    - staging
    - master

.deploy:
  stage: deploy
  image: lucj/kubectl:1.15.2
  before_script:
    - kubectl config set-cluster my-cluster --server=${KUBE_URL} --certificate-authority="${KUBE_CA_PEM_FILE}"
    - kubectl config set-credentials admin --token=${KUBE_TOKEN}
    - kubectl config set-context my-context --cluster=my-cluster --user=admin --namespace=default
    - kubectl config use-context my-context


deploy_alpha:
  extends: .deploy
  only:
    - develop
  environment: alpha
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/" deployment/alpha.yaml
    - kubectl apply -f deployment/alpha.yaml

deploy_staging:
  extends: .deploy
  only:
    - staging
  environment: staging
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/" deployment/staging.yaml
    - kubectl apply -f deployment/staging.yaml

deploy_production:
  extends: .deploy
  only:
    - master
  environment: production
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/" deployment/production.yaml
    - kubectl apply -f deployment/production.yaml

rollback_alpha:
  extends: .deploy
  only:
    - develop
  environment: alpha
  when: manual
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_BEFORE_SHA/" deployment/alpha.yaml
    - kubectl apply -f deployment/alpha.yaml

rollback_staging:
  extends: .deploy
  only:
    - staging
  environment: staging
  when: manual
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_BEFORE_SHA/" deployment/staging.yaml
    - kubectl apply -f deployment/staging.yaml

rollback_production:
  extends: .deploy
  only:
    - master
  environment: production
  when: manual
  script:
    - sed -i "s/__IMAGE_TAG__/$CI_COMMIT_REF_NAME-$CI_COMMIT_BEFORE_SHA/" deployment/production.yaml
    - kubectl apply -f deployment/production.yaml
