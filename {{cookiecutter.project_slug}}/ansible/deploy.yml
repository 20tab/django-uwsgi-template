---
- name: Deployment configuration
  hosts: servers
  gather_facts: False
  vars_files:
      - ${TARGET}.yml

  tasks:
    - name: Clone repository
      git:{% raw %}
        repo={{git_repository}}
        dest=www/{{project_dir_name}}
        accept_hostkey=yes
        version={{branch}}
    - name: Install requirements
      pip:
        requirements=${HOME}/www/{{project_dir_name}}/requirements/prod.txt
        virtualenv=${HOME}/venvs/{{project_venv_name}}
        virtualenv_python=python3
    - name: Create vassal
      file:
        src: "${HOME}/www/{{project_dir_name}}/uwsgiconf/remote/{{vassal}}.ini"
        dest: "${HOME}/vassals/{{project_dir_name}}.ini"
        state: link
    - name: Copy database dump file
      tags: restore
      copy:
        src=dump.sql.bz2
        dest=${HOME}/backup
    - name: Remove database
      tags: restore
      postgresql_db:
        login_password={{db_password}}
        login_user={{db_user}}
        name={{project_dir_name}}
        state=absent
      vars:
        ansible_python_interpreter: venvs/{{project_venv_name}}/bin/python
    - name: Create database
      tags: database
      postgresql_db:
        encoding=UTF-8
        login_password={{db_password}}
        login_user={{db_user}}
        name={{project_dir_name}}
        state=present
        template=template0
      vars:
        ansible_python_interpreter: venvs/{{project_venv_name}}/bin/python
    - name: Restore database dump file
      tags: restore
      postgresql_db:
        login_password={{db_password}}
        login_user={{db_user}}
        name={{project_dir_name}}
        state=restore
        target_opts="-q -o /dev/null"
        target=${HOME}/backup/dump.sql.bz2
    - name: Copy env file
      tags: init
      copy:
        src: ${HOME}/www/{{project_dir_name}}/.env.tpl
        dest: ${HOME}/www/{{project_dir_name}}/.env
        mode: 0600
        remote_src: yes
    - name: Generate secret key
      tags: init
      command: "${HOME}/venvs/{{project_venv_name}}/bin/python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'"
      register: secretkey
    - name: Write env vars
      tags: init
      command: sed -i'.bak' -e "s/secretkey/{{ secretkey.stdout }}/g;s/username/{{db_user}}/g;s/password/{{db_password}}/g;s/database/{{db_name}}/g;s/Local/{{configuration}}/g;" ${HOME}/www/{{project_dir_name}}/.env
    - name: Migrate database
      command: "${HOME}/venvs/{{project_venv_name}}/bin/python manage.py migrate --settings={{project_name}}.settings --configuration={{configuration}}"
      args:
        chdir: ${HOME}/www/{{project_dir_name}}/
    - name: Collects the static files
      command: "${HOME}/venvs/{{project_venv_name}}/bin/python manage.py collectstatic --clear --noinput --settings={{project_name}}.settings --configuration={{configuration}}"
      args:
        chdir: ${HOME}/www/{{project_dir_name}}/
    - name: Restart vassal
      file:
        path: "${HOME}/www/{{project_dir_name}}/uwsgiconf/remote/{{vassal}}.ini"
        state: touch{% endraw %}
